---
import Layout from '../layouts/Layout.astro';
import NavBar from '../components/NavBar.astro';
import Seccion1 from '../components/Seccion1.astro';
import Seccion2 from '../components/Seccion2.astro';
---

<Layout title="neurosoft.dev">
  <NavBar />
  <main>
    <section class="init">
      <h1>Impulsa tu <strong>Presencia Digital</strong></h1>
      <ul class="typing-container">
        <li class="typing-word active">Bot de WhatsApp</li>
        <li class="typing-word active">Bot de Telegram</li>
        <li class="typing-word">Inteligencia Artificial</li>
        <li class="typing-word">Análisis de Datos</li>
        <li class="typing-word">Desarrollo Web</li>
        <li class="typing-word">Desarrollo Móvil</li>
        <li class="typing-word">Minería de Datos</li>
      </ul>
      <h2>Hazlo con nosotros</h2>
      <button id="btn-contact">Contactanos</button>
    </section>
    <img src="/arrow-down.svg" alt="arrow down"  />
    <Seccion1 />
    <Seccion2 />
  </main>
</Layout>

<style>
  .init {
    padding-top: 6.5rem;
    width: 50%;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    gap: 0;
  }
  section h1 {
    margin: 0;
    font-size: 66px;
    font-weight: 700;
    text-align: center;
    margin-top: 5rem;
    letter-spacing: -1px;
    & strong {
      display: block;
      color: rgb(var(--primary));
      margin-top: -1.1rem;
    }
  }
  ul {
    padding: 0;
    margin: 0;
    list-style: none;
  }
  section h2 {
    margin: 0;
    font-size: 40px;
    font-weight: 700;
    letter-spacing: -1px;
  }
  section button {
    margin-top: 1rem;
    background-color: rgb(var(--primary));
    color: white;
    border: none;
    padding: 1rem 1.5rem;
    font-size: 15px;
    border-radius: 999px;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    box-shadow: 0 0 10px rgba(var(--primary), 0.5);
    &:hover {
      background-color: rgba(var(--primary), 0.8);
      color: white;
      transform: scale(1.1);
    }
  }

  main {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center; 
    gap: 4rem;
  }
  main img {
    width: 35px;
    animation: desplazar-abajo 2s ease-in-out infinite;
  }

  @keyframes desplazar-abajo {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(10px);
  }
  100% {
    transform: translateY(0);
  }
}
.typing-container {
  overflow: hidden;
  height: 2.5em;
  width: 20em; 
  position: relative;
  display: inline-block;
}

.typing-word {
  position: absolute;
  width: 100%;
  top: 100%;
  opacity: 0;
  transition: transform 1s ease-in-out, opacity 1s ease-in-out;
      text-wrap-style: pretty;
    font-weight: 400;
    font-size: 28px;
    text-align: center;
    color: rgb(var(--primary));
    letter-spacing: -1px;
}

.typing-word.active {
  top: 0;
  opacity: 1;
  transform: translateY(0);
}

.typing-word.prev {
  top: -100%;
  opacity: 0;
  transform: translateY(-100%);
}

@media (max-width: 768px) {
  .init {
    padding-top: 10rem;
    width: 90%; /* Reducir el ancho para móviles */
  }

  section h1 {
    font-size: 40px; /* Ajustar el tamaño de fuente */
    margin-top: 2rem;
  }

  section h2 {
    font-size: 24px; /* Ajustar el tamaño de fuente */
  }

  section button {
    padding: 0.75rem 1.25rem; /* Reducir el tamaño del botón */
    font-size: 14px; /* Reducir la fuente del botón */
  }

  main {
    gap: 2rem; /* Reducir el espacio entre los elementos */
  }

  main img {
    width: 25px;
  }

  .typing-container {
    width: 100%; /* Asegurar que el contenedor ocupe todo el ancho */
  }

  .typing-word {
    font-size: 20px; /* Reducir el tamaño de la fuente */
  }
}
</style>

<script>
  const btn = document.getElementById("btn-contact")!;
  btn.addEventListener("click", function() {
    window.location.href = "#contactos";
  });
const words = document.querySelectorAll('.typing-word');
let currentIndex = 0;

// Función para iniciar el carousel
function showNextWord() {
  const currentWord = words[currentIndex];
  currentWord.classList.remove('active');
  currentWord.classList.add('prev');
  
  currentIndex = (currentIndex + 1) % words.length; // Cicla a través de las palabras
  
  const nextWord = words[currentIndex];
  nextWord.classList.remove('prev');
  nextWord.classList.add('active');
}

// Inicializa el estado de las palabras
words.forEach((word, index) => {
  if (index !== 0) {
    word.classList.add('prev'); // Todas las palabras, excepto la primera, empiezan ocultas arriba
  }
});

// Cambia la palabra cada 4 segundos
setInterval(showNextWord, 3000);
</script>